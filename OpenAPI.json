{
  "openapi": "3.0.0",
  "info": {
    "title": "Lightspeed.tv",
    "description": "The definite nuts.",
    "termsOfService": "https://lightspeed.tv/terms",
    "contact": {
      "name": "Lightspeed Support",
      "url": "https://lightspeed.tv",
      "email": "fredward@lightspeed.tv"
    },
    "license": {
      "name": "Proprietary"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://demo.lightspeed.tv",
      "description": "Lightspeed API (demo.lightspeed.tv)"
    },
    {
      "url": "https://api.lightspeed.tv",
      "description": "Lightspeed API (api.lightspeed.tv)"
    },
    {
      "url": "http://localhost:8000",
      "description": "Local Lightspeed Environment"
    }
  ],
  "paths": {
    "/regions": {
      "get": {
        "tags": ["Regions"],
        "summary": "Fetch Regions",
        "description": "Fetch all streaming regions.",
        "operationId": "regions_fetch_regions",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/streams/": {
      "get": {
        "tags": ["Streams"],
        "summary": "Find Streams",
        "description": "Find global streams",
        "operationId": "find_find_streams",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregateStream"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Streams"],
        "summary": "Create Stream",
        "description": "Enable streaming on a user account.\n\nRequires creating a user first.",
        "operationId": "create_create_stream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCreateStream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/@me": {
      "get": {
        "tags": ["Streams"],
        "summary": "Fetch Own Stream",
        "description": "Fetch own stream information",
        "operationId": "fetch_fetch_own",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      },
      "patch": {
        "tags": ["Streams"],
        "summary": "Edit Stream",
        "description": "Edit stream information.",
        "operationId": "edit_edit_stream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataEditStream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/{path}": {
      "get": {
        "tags": ["Streams"],
        "summary": "Fetch Stream",
        "description": "Fetch a stream by stream path",
        "operationId": "fetch_fetch_stream",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregateStream"
                }
              }
            }
          }
        }
      }
    },
    "/streams/{path}/bans": {
      "get": {
        "tags": ["Users"],
        "summary": "Fetch Bans",
        "description": "Fetch all banned users in a stream",
        "operationId": "fetch_bans_fetch_bans",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ban"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/reset_token": {
      "post": {
        "tags": ["Streams"],
        "summary": "Reset Stream Token",
        "description": "Reset the token used for this account's stream.",
        "operationId": "reset_token_reset",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/{stream_id}/bans/{user_id}": {
      "put": {
        "tags": ["Moderation"],
        "summary": "Ban User",
        "description": "Permanently ban a user from talking.",
        "operationId": "ban_ban_user",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataBanUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ban"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/{target}/bans/{id}": {
      "delete": {
        "tags": ["Moderation"],
        "summary": "Pardon User",
        "description": "Unban a user.",
        "operationId": "pardon_pardon_user",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/{target}/follow": {
      "put": {
        "tags": ["Followers"],
        "summary": "Follow Stream",
        "operationId": "follow_follow_stream",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      },
      "delete": {
        "tags": ["Followers"],
        "summary": "Follow Stream",
        "operationId": "unfollow_unfollow_stream",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/streams/{stream_id}/mods/{user_id}": {
      "put": {
        "tags": ["Moderation"],
        "summary": "Promote User to Moderator",
        "description": "Give a target user moderation powers on a stream.",
        "operationId": "promote_promote_user",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      },
      "delete": {
        "tags": ["Moderation"],
        "summary": "Demote User from Moderator",
        "description": "Take away a target user's moderation powers on a stream.",
        "operationId": "demote_demote_user",
        "parameters": [
          {
            "name": "stream_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/users/@me": {
      "get": {
        "tags": ["Users"],
        "summary": "Fetch Self",
        "description": "Fetch own user.",
        "operationId": "fetch_fetch_own",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      },
      "put": {
        "tags": ["Users"],
        "summary": "Create User",
        "description": "Create a new user profile.",
        "operationId": "create_create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Edit User",
        "description": "Edit user information.",
        "operationId": "edit_edit_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataEditUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/users/{path}": {
      "get": {
        "tags": ["Users"],
        "summary": "Fetch User",
        "description": "Fetch user using path.",
        "operationId": "fetch_fetch_user",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/bans": {
      "get": {
        "tags": ["Users"],
        "summary": "Fetch Your Bans",
        "description": "Fetch all of your bans",
        "operationId": "fetch_bans_fetch_bans",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BanInformation"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/categories/create": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create Category",
        "description": "Create a new category of streams.",
        "operationId": "create_create_category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCreateCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete Category",
        "description": "Delete a streaming category.",
        "operationId": "delete_delete_category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      },
      "patch": {
        "tags": ["Categories"],
        "summary": "Edit Category",
        "description": "Change information for an existing category.",
        "operationId": "edit_edit_category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataEditCategory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/categories/": {
      "get": {
        "tags": ["Categories"],
        "summary": "List Categories",
        "description": "List streaming categories available.",
        "operationId": "list_list_categories",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chat/{target}/messages": {
      "get": {
        "tags": ["Chat"],
        "summary": "Fetch History",
        "description": "Fetch chat message history for a stream.",
        "operationId": "history_fetch_history",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Chat"],
        "summary": "Send Message",
        "description": "Send a message to a stream chat.",
        "operationId": "send_send_message",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSendMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/chat/{target}/messages/{id}": {
      "delete": {
        "tags": ["Chat"],
        "summary": "Delete Message",
        "description": "Delete a message from chat by its id.",
        "operationId": "delete_delete_message",
        "parameters": [
          {
            "name": "target",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Api Key": []
          }
        ]
      }
    },
    "/auth/account/create": {
      "post": {
        "tags": ["Account"],
        "summary": "Create Account",
        "description": "Create a new account.",
        "operationId": "create_account_create_account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataCreateAccount"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/account/reverify": {
      "post": {
        "tags": ["Account"],
        "summary": "Resend Verification",
        "description": "Resend account creation verification email.",
        "operationId": "resend_verification_resend_verification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataResendVerification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/account/delete": {
      "put": {
        "tags": ["Account"],
        "summary": "Confirm Account Deletion",
        "description": "Schedule an account for deletion by confirming the received token.",
        "operationId": "confirm_deletion_confirm_deletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataAccountDeletion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": ["Account"],
        "summary": "Delete Account",
        "description": "Request to have an account deleted.",
        "operationId": "delete_account_delete_account",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/account/": {
      "get": {
        "tags": ["Account"],
        "summary": "Fetch Account",
        "description": "Fetch account information from the current session.",
        "operationId": "fetch_account_fetch_account",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/account/disable": {
      "post": {
        "tags": ["Account"],
        "summary": "Disable Account",
        "description": "Disable an account.",
        "operationId": "disable_account_disable_account",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/account/change/password": {
      "patch": {
        "tags": ["Account"],
        "summary": "Change Password",
        "description": "Change the current account password.",
        "operationId": "change_password_change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataChangePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/account/change/email": {
      "patch": {
        "tags": ["Account"],
        "summary": "Change Email",
        "description": "Change the associated account email.",
        "operationId": "change_email_change_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataChangeEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/account/verify/{code}": {
      "post": {
        "tags": ["Account"],
        "summary": "Verify Email",
        "description": "Verify an email address.",
        "operationId": "verify_email_verify_email",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVerify"
                }
              }
            }
          }
        }
      }
    },
    "/auth/account/reset_password": {
      "post": {
        "tags": ["Account"],
        "summary": "Send Password Reset",
        "description": "Send an email to reset account password.",
        "operationId": "send_password_reset_send_password_reset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSendPasswordReset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": ["Account"],
        "summary": "Password Reset",
        "description": "Confirm password reset and change the password.",
        "operationId": "password_reset_password_reset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPasswordReset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/session/login": {
      "post": {
        "tags": ["Session"],
        "summary": "Login",
        "description": "Login to an account.",
        "operationId": "login_login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLogin"
                }
              }
            }
          }
        }
      }
    },
    "/auth/session/logout": {
      "post": {
        "tags": ["Session"],
        "summary": "Logout",
        "description": "Delete current session.",
        "operationId": "logout_logout",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/session/all": {
      "get": {
        "tags": ["Session"],
        "summary": "Fetch Sessions",
        "description": "Fetch all sessions associated with this account.",
        "operationId": "fetch_all_fetch_all",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionInfo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      },
      "delete": {
        "tags": ["Session"],
        "summary": "Delete All Sessions",
        "description": "Delete all active sessions, optionally including current one.",
        "operationId": "revoke_all_revoke_all",
        "parameters": [
          {
            "name": "revoke_self",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/session/{id}": {
      "delete": {
        "tags": ["Session"],
        "summary": "Revoke Session",
        "description": "Delete a specific active session.",
        "operationId": "revoke_revoke",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      },
      "patch": {
        "tags": ["Session"],
        "summary": "Edit Session",
        "description": "Edit current session information.",
        "operationId": "edit_edit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataEditSession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/mfa/ticket": {
      "put": {
        "tags": ["MFA"],
        "summary": "Create MFA ticket",
        "description": "Create a new MFA ticket or validate an existing one.",
        "operationId": "create_ticket_create_ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MFATicket"
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          },
          {
            "Unvalidated MFA Ticket": []
          }
        ]
      }
    },
    "/auth/mfa/": {
      "get": {
        "tags": ["MFA"],
        "summary": "MFA Status",
        "description": "Fetch MFA status of an account.",
        "operationId": "fetch_status_fetch_status",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiFactorStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/mfa/recovery": {
      "post": {
        "tags": ["MFA"],
        "summary": "Fetch Recovery Codes",
        "description": "Fetch recovery codes for an account.",
        "operationId": "fetch_recovery_fetch_recovery",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      },
      "patch": {
        "tags": ["MFA"],
        "summary": "Generate Recovery Codes",
        "description": "Re-generate recovery codes for an account.",
        "operationId": "generate_recovery_generate_recovery",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/mfa/methods": {
      "get": {
        "tags": ["MFA"],
        "summary": "Get MFA Methods",
        "description": "Fetch available MFA methods.",
        "operationId": "get_mfa_methods_get_mfa_methods",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MFAMethod"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      }
    },
    "/auth/mfa/totp": {
      "put": {
        "tags": ["MFA"],
        "summary": "Enable TOTP 2FA",
        "description": "Generate a new secret for TOTP.",
        "operationId": "totp_enable_totp_enable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Session Token": []
          }
        ]
      },
      "post": {
        "tags": ["MFA"],
        "summary": "Generate TOTP Secret",
        "description": "Generate a new secret for TOTP.",
        "operationId": "totp_generate_secret_totp_generate_secret",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTotpSecret"
                }
              }
            }
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      },
      "delete": {
        "tags": ["MFA"],
        "summary": "Disable TOTP 2FA",
        "description": "Disable TOTP 2FA for an account.",
        "operationId": "totp_disable_totp_disable",
        "responses": {
          "default": {
            "description": "An error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "Valid MFA Ticket": []
          },
          {
            "Session Token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Region": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "signaling": {
            "description": "URL to connect to this server's signaling service",
            "type": "string",
            "nullable": true
          },
          "ingest": {
            "description": "URI to connect to this server's ingest service",
            "type": "string",
            "nullable": true
          },
          "location": {
            "description": "The location of this server",
            "type": "string",
            "nullable": true
          },
          "last_ping": {
            "description": "Last ping from this server\n\nIf a server has not sent a ping within the past 30 seconds, assume it to be offline.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ],
            "nullable": true
          }
        }
      },
      "ISO8601 Timestamp": {
        "description": "ISO8601 formatted timestamp",
        "type": "string",
        "format": "date-time",
        "example": "1970-01-01T00:00:00Z"
      },
      "Error": {
        "title": "Error",
        "oneOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["LabelMe"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["NotFound"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["CategoryNotFound"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["NotModerator"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["AlreadyBanned"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["AlreadyModerator"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UserIsNotBanned"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidInvite"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidFile"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InternalError"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["AlreadyExists"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UsernameInUse"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UsernameChangeNotAllowed"]
              }
            }
          },
          {
            "type": "object",
            "required": ["operation", "type", "with"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["DatabaseError"]
              },
              "operation": {
                "type": "string"
              },
              "with": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["FailedValidation"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidString"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidOperation"]
              }
            }
          },
          {
            "type": "object",
            "required": ["retry_after", "type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["TooManyRequests"]
              },
              "retry_after": {
                "type": "integer",
                "format": "uint128",
                "minimum": 0.0
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Banned"]
              }
            }
          }
        ]
      },
      "Stream": {
        "description": "Any user live stream",
        "type": "object",
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "ftl_id": {
            "description": "ID used for FTL protocol",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "description": "Stream Title",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Stream Description",
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "description": "ID of thumbnail file",
            "type": "string",
            "nullable": true
          },
          "tags": {
            "description": "Stream Tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "description": "Stream Token for FTL",
            "type": "string",
            "nullable": true
          },
          "live": {
            "description": "Object providing additional information while live",
            "allOf": [
              {
                "$ref": "#/components/schemas/Live"
              }
            ],
            "nullable": true
          },
          "category": {
            "description": "ID of category",
            "default": "default",
            "type": "string"
          },
          "moderators": {
            "description": "IDs of moderators",
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "record": {
            "description": "Whether to record VODs for this stream",
            "default": true,
            "type": "boolean"
          },
          "rtmp_relay": {
            "description": "RTMP URL to relay the stream to",
            "type": "string",
            "nullable": true
          },
          "last_streamed": {
            "description": "Time at which the last stream ended",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ],
            "nullable": true
          }
        }
      },
      "Live": {
        "description": "Active live stream",
        "type": "object",
        "required": ["region", "started_at"],
        "properties": {
          "started_at": {
            "description": "When this stream started",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ]
          },
          "region": {
            "description": "Region clients should connect to in order to watch",
            "type": "string"
          },
          "controller": {
            "description": "Enum determining how clients should connect to this live stream",
            "default": "Inhouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/Controller"
              }
            ]
          }
        }
      },
      "Controller": {
        "description": "Controller for live stream that clients connect to",
        "type": "string",
        "enum": ["Inhouse", "Mist"]
      },
      "DataCreateStream": {
        "title": "Stream Data",
        "type": "object",
        "required": ["invite"],
        "properties": {
          "invite": {
            "description": "Invite code provided by Lightspeed team",
            "type": "string"
          }
        }
      },
      "DataEditStream": {
        "title": "Stream Data",
        "type": "object",
        "properties": {
          "title": {
            "description": "Stream title",
            "type": "string",
            "maxLength": 60,
            "minLength": 0,
            "nullable": true
          },
          "description": {
            "description": "Stream description",
            "type": "string",
            "maxLength": 2000,
            "minLength": 0,
            "nullable": true
          },
          "thumbnail": {
            "description": "Attachment Id used for thumbnail",
            "type": "string",
            "nullable": true
          },
          "tags": {
            "description": "Stream tags",
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "nullable": true
          },
          "category": {
            "description": "Stream category id",
            "type": "string",
            "nullable": true
          },
          "rtmp_relay": {
            "description": "RTMP Relay",
            "type": "string",
            "nullable": true
          }
        }
      },
      "AggregateStream": {
        "description": "Combined stream information",
        "type": "object",
        "required": ["category", "stream", "user"],
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "user": {
            "description": "User information",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "stream": {
            "description": "Stream information",
            "allOf": [
              {
                "$ref": "#/components/schemas/Stream"
              }
            ]
          },
          "category": {
            "description": "Category information",
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ]
          },
          "region": {
            "description": "Region this stream is currently live in",
            "allOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ],
            "nullable": true
          },
          "follower_count": {
            "description": "Number of followers this stream has",
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["path", "username"],
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "path": {
            "description": "Path at which this user is accessible",
            "type": "string"
          },
          "username": {
            "description": "Case-sensitive username",
            "type": "string"
          },
          "avatar": {
            "description": "ID of avatar file",
            "type": "string",
            "nullable": true
          },
          "banner": {
            "description": "ID of banner file",
            "type": "string",
            "nullable": true
          },
          "bio": {
            "description": "User profile bio",
            "type": "string"
          },
          "social_links": {
            "description": "Social links",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLink"
            }
          },
          "accent_colour": {
            "description": "Accent Colour",
            "type": "string"
          },
          "privileged": {
            "description": "Whether this user is privileged",
            "type": "boolean"
          },
          "hidden": {
            "description": "If user and their stream is hidden from public streams (temporary)",
            "type": "boolean"
          },
          "following": {
            "description": "Request only: IDs of streamers this user is following",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SocialLink": {
        "type": "object",
        "required": ["link", "title"],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          },
          "link": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3
          }
        }
      },
      "Category": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "title": {
            "description": "Title for this category",
            "type": "string"
          },
          "cover": {
            "description": "ID of cover picture",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Category description",
            "type": "string"
          }
        }
      },
      "Ban": {
        "description": "Represenation of a chat ban on Lightspeed",
        "type": "object",
        "required": ["mod_id", "stream_id", "user_id"],
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "stream_id": {
            "description": "Stream ID",
            "type": "string"
          },
          "user_id": {
            "description": "User ID",
            "type": "string"
          },
          "mod_id": {
            "description": "Mod ID",
            "type": "string"
          },
          "reason": {
            "description": "Ban reason",
            "type": "string"
          },
          "expires": {
            "description": "Time to expire",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ],
            "nullable": true
          }
        }
      },
      "DataBanUser": {
        "title": "Ban Data",
        "type": "object",
        "properties": {
          "expires": {
            "description": "Time at which this ban expires",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ],
            "nullable": true
          }
        }
      },
      "DataCreateUser": {
        "title": "User Data",
        "type": "object",
        "required": ["username"],
        "properties": {
          "username": {
            "description": "Username",
            "type": "string",
            "pattern": "^[a-z0-9_]{4,25}$"
          }
        }
      },
      "DataEditUser": {
        "title": "User Data",
        "type": "object",
        "properties": {
          "username": {
            "description": "New username",
            "type": "string",
            "pattern": "^[a-z0-9_]{4,25}$",
            "nullable": true
          },
          "avatar": {
            "description": "Attachment Id used for avatar",
            "type": "string",
            "nullable": true
          },
          "banner": {
            "description": "Attachment Id used for banner",
            "type": "string",
            "nullable": true
          },
          "bio": {
            "description": "Profile bio",
            "type": "string",
            "maxLength": 320,
            "minLength": 0,
            "nullable": true
          },
          "social_links": {
            "description": "List of social links",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialLink"
            },
            "maxItems": 5,
            "minItems": 0,
            "nullable": true
          },
          "accent_colour": {
            "description": "Accent colour",
            "type": "string",
            "maxLength": 24,
            "minLength": 0,
            "nullable": true
          }
        }
      },
      "BanInformation": {
        "description": "Information about a user's ban on Lightspeed",
        "type": "object",
        "required": ["stream_id"],
        "properties": {
          "stream_id": {
            "description": "Stream ID",
            "type": "string"
          },
          "expires": {
            "description": "Time to expire",
            "allOf": [
              {
                "$ref": "#/components/schemas/ISO8601 Timestamp"
              }
            ],
            "nullable": true
          }
        }
      },
      "DataCreateCategory": {
        "title": "Category Data",
        "type": "object",
        "required": ["description", "title"],
        "properties": {
          "title": {
            "description": "Category title",
            "type": "string"
          },
          "cover": {
            "description": "Attachment Id for cover photo",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Category description",
            "type": "string"
          }
        }
      },
      "DataEditCategory": {
        "title": "Category Data",
        "type": "object",
        "properties": {
          "title": {
            "description": "Category title",
            "type": "string",
            "nullable": true
          },
          "cover": {
            "description": "Attachment Id for category photo",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Category description",
            "type": "string",
            "nullable": true
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["author_id", "content", "stream_id"],
        "properties": {
          "_id": {
            "description": "Internal ID",
            "type": "string",
            "nullable": true
          },
          "stream_id": {
            "description": "Stream ID",
            "type": "string"
          },
          "author": {
            "description": "User",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "nullable": true
          },
          "author_id": {
            "description": "User ID",
            "type": "string"
          },
          "content": {
            "description": "Message content",
            "type": "string"
          }
        }
      },
      "DataSendMessage": {
        "title": "Message Data",
        "type": "object",
        "required": ["content"],
        "properties": {
          "content": {
            "description": "Message content",
            "type": "string",
            "maxLength": 280,
            "minLength": 1
          }
        }
      },
      "RAuth Error": {
        "title": "Error",
        "oneOf": [
          {
            "type": "object",
            "required": ["type", "with"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["IncorrectData"]
              },
              "with": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["operation", "type", "with"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["DatabaseError"]
              },
              "operation": {
                "type": "string"
              },
              "with": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InternalError"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["OperationFailed"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["RenderFail"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["MissingHeaders"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["CaptchaFailed"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidSession"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UnverifiedAccount"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["UnknownUser"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["EmailFailed"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidToken"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["MissingInvite"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidInvite"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["InvalidCredentials"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["CompromisedPassword"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["DisabledAccount"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["ShortPassword"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Blacklisted"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["LockedOut"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["TotpAlreadyEnabled"]
              }
            }
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["DisallowedMFAMethod"]
              }
            }
          }
        ]
      },
      "DataCreateAccount": {
        "title": "Account Data",
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "description": "Valid email address",
            "type": "string"
          },
          "password": {
            "description": "Password",
            "type": "string"
          },
          "invite": {
            "description": "Invite code",
            "type": "string",
            "nullable": true
          },
          "captcha": {
            "description": "Captcha verification code",
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataResendVerification": {
        "title": "Resend Information",
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "description": "Email associated with the account",
            "type": "string"
          },
          "captcha": {
            "description": "Captcha verification code",
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataAccountDeletion": {
        "title": "Account Deletion Token",
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "description": "Deletion token",
            "type": "string"
          }
        }
      },
      "AccountInfo": {
        "type": "object",
        "required": ["_id", "email"],
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "DataChangePassword": {
        "title": "Change Data",
        "type": "object",
        "required": ["current_password", "password"],
        "properties": {
          "password": {
            "description": "New password",
            "type": "string"
          },
          "current_password": {
            "description": "Current password",
            "type": "string"
          }
        }
      },
      "DataChangeEmail": {
        "title": "Change Data",
        "type": "object",
        "required": ["current_password", "email"],
        "properties": {
          "email": {
            "description": "Valid email address",
            "type": "string"
          },
          "current_password": {
            "description": "Current password",
            "type": "string"
          }
        }
      },
      "ResponseVerify": {
        "anyOf": [
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": ["ticket"],
            "properties": {
              "ticket": {
                "description": "Authorised MFA ticket, can be used to log in",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MFATicket"
                  }
                ]
              }
            }
          }
        ]
      },
      "MFATicket": {
        "description": "Multi-factor auth ticket",
        "type": "object",
        "required": ["_id", "account_id", "authorised", "token", "validated"],
        "properties": {
          "_id": {
            "description": "Unique Id",
            "type": "string"
          },
          "account_id": {
            "description": "Account Id",
            "type": "string"
          },
          "token": {
            "description": "Unique Token",
            "type": "string"
          },
          "validated": {
            "description": "Whether this ticket has been validated (can be used for account actions)",
            "type": "boolean"
          },
          "authorised": {
            "description": "Whether this ticket is authorised (can be used to log a user in)",
            "type": "boolean"
          },
          "last_totp_code": {
            "description": "TOTP code at time of ticket creation",
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataPasswordReset": {
        "title": "Password Reset",
        "type": "object",
        "required": ["password", "token"],
        "properties": {
          "token": {
            "description": "Reset token",
            "type": "string"
          },
          "password": {
            "description": "New password",
            "type": "string"
          },
          "remove_sessions": {
            "description": "Whether to logout all sessions",
            "default": false,
            "type": "boolean"
          }
        }
      },
      "DataSendPasswordReset": {
        "title": "Reset Information",
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "description": "Email associated with the account",
            "type": "string"
          },
          "captcha": {
            "description": "Captcha verification code",
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResponseLogin": {
        "oneOf": [
          {
            "description": "Session information",
            "type": "object",
            "required": ["_id", "name", "result", "token", "user_id"],
            "properties": {
              "result": {
                "type": "string",
                "enum": ["Success"]
              },
              "_id": {
                "description": "Unique Id",
                "type": "string"
              },
              "user_id": {
                "description": "User Id",
                "type": "string"
              },
              "token": {
                "description": "Session token",
                "type": "string"
              },
              "name": {
                "description": "Display name",
                "type": "string"
              },
              "subscription": {
                "description": "Web Push subscription",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WebPushSubscription"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "type": "object",
            "required": ["allowed_methods", "result", "ticket"],
            "properties": {
              "result": {
                "type": "string",
                "enum": ["MFA"]
              },
              "ticket": {
                "type": "string"
              },
              "allowed_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MFAMethod"
                }
              }
            }
          }
        ]
      },
      "WebPushSubscription": {
        "description": "Web Push subscription",
        "type": "object",
        "required": ["auth", "endpoint", "p256dh"],
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "p256dh": {
            "type": "string"
          },
          "auth": {
            "type": "string"
          }
        }
      },
      "MFAMethod": {
        "description": "MFA method",
        "type": "string",
        "enum": ["Password", "Recovery", "Totp"]
      },
      "DataLogin": {
        "title": "Login Data",
        "anyOf": [
          {
            "type": "object",
            "required": ["email", "password"],
            "properties": {
              "email": {
                "description": "Email",
                "type": "string"
              },
              "password": {
                "description": "Password",
                "type": "string"
              },
              "friendly_name": {
                "description": "Friendly name used for the session",
                "type": "string",
                "nullable": true
              }
            }
          },
          {
            "type": "object",
            "required": ["mfa_ticket"],
            "properties": {
              "mfa_ticket": {
                "description": "Unvalidated or authorised MFA ticket\n\nUsed to resolve the correct account",
                "type": "string"
              },
              "mfa_response": {
                "description": "Valid MFA response\n\nThis will take precedence over the `password` field where applicable",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MFAResponse"
                  }
                ],
                "nullable": true
              },
              "friendly_name": {
                "description": "Friendly name used for the session",
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "MFAResponse": {
        "description": "MFA response",
        "anyOf": [
          {
            "type": "object",
            "required": ["password"],
            "properties": {
              "password": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["recovery_code"],
            "properties": {
              "recovery_code": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["totp_code"],
            "properties": {
              "totp_code": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SessionInfo": {
        "type": "object",
        "required": ["_id", "name"],
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "DataEditSession": {
        "title": "Edit Data",
        "type": "object",
        "required": ["friendly_name"],
        "properties": {
          "friendly_name": {
            "description": "Session friendly name",
            "type": "string"
          }
        }
      },
      "MultiFactorStatus": {
        "type": "object",
        "required": [
          "email_mfa",
          "email_otp",
          "recovery_active",
          "security_key_mfa",
          "totp_mfa",
          "trusted_handover"
        ],
        "properties": {
          "email_otp": {
            "type": "boolean"
          },
          "trusted_handover": {
            "type": "boolean"
          },
          "email_mfa": {
            "type": "boolean"
          },
          "totp_mfa": {
            "type": "boolean"
          },
          "security_key_mfa": {
            "type": "boolean"
          },
          "recovery_active": {
            "type": "boolean"
          }
        }
      },
      "ResponseTotpSecret": {
        "title": "Totp Secret",
        "type": "object",
        "required": ["secret"],
        "properties": {
          "secret": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Api Key": {
        "description": "Session Token",
        "type": "apiKey",
        "name": "x-session-token",
        "in": "header"
      },
      "Session Token": {
        "description": "Used to authenticate as a user.",
        "type": "apiKey",
        "name": "x-session-token",
        "in": "header"
      },
      "Valid MFA Ticket": {
        "description": "Used to authorise a request.",
        "type": "apiKey",
        "name": "x-mfa-ticket",
        "in": "header"
      },
      "Unvalidated MFA Ticket": {
        "description": "Used to authorise a request.",
        "type": "apiKey",
        "name": "x-mfa-ticket",
        "in": "header"
      }
    }
  }
}
